@baseUrl = http://127.0.0.1:8000/api
@token = eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiJ0ZXN0IiwiZXhwIjoyMDUzMjI2OTczfQ.cMGhHbnYwkuPxmbcJezfYsflyLX-NFsAErPbIxD5qC0

### Get all categories
GET {{baseUrl}}/categories
Content-Type: application/json

### Get all categories with pagination
GET {{baseUrl}}/categories?skip=0&limit=5
Content-Type: application/json

### Get specific category by name
GET {{baseUrl}}/categories/Development
Content-Type: application/json

### Create new category (requires auth)
POST {{baseUrl}}/categories
Content-Type: application/json
Authorization: Bearer {{token}}

{
    "name": "Development",
    "description": "Tools and platforms for software development"
}

### Create category with empty description (should succeed)
POST {{baseUrl}}/categories
Content-Type: application/json
Authorization: Bearer {{token}}

{
    "name": "Testing",
    "description": ""
}

### Create category with whitespace description (should succeed, will be trimmed)
POST {{baseUrl}}/categories
Content-Type: application/json
Authorization: Bearer {{token}}

{
    "name": "Infrastructure",
    "description": "    "
}

### Update category (requires auth)
PUT {{baseUrl}}/categories/Development
Content-Type: application/json
Authorization: Bearer {{token}}

{
    "name": "Development",
    "description": "Updated description for development tools category"
}

### Update category with empty description (should succeed)
PUT {{baseUrl}}/categories/Testing
Content-Type: application/json
Authorization: Bearer {{token}}

{
    "description": ""
}

### Delete category (requires auth)
DELETE {{baseUrl}}/categories/Development
Authorization: Bearer {{token}}

### Test error cases

### Try to create category with empty name (should fail)
POST {{baseUrl}}/categories
Content-Type: application/json
Authorization: Bearer {{token}}

{
    "name": "",
    "description": "This should fail validation"
}

### Try to create category with only whitespace name (should fail)
POST {{baseUrl}}/categories
Content-Type: application/json
Authorization: Bearer {{token}}

{
    "name": "    ",
    "description": "This should fail validation"
}

### Try to create category with too long name (>100 chars, should fail)
POST {{baseUrl}}/categories
Content-Type: application/json
Authorization: Bearer {{token}}

{
    "name": "This is a very very very very very very very very very very very very very very very very very very very very long name",
    "description": "This should fail validation"
}

### Try to get non-existent category (should return 404)
GET {{baseUrl}}/categories/non-existent-category
Content-Type: application/json

### Try to create duplicate category (should fail)
POST {{baseUrl}}/categories
Content-Type: application/json
Authorization: Bearer {{token}}

{
    "name": "Development",
    "description": "This should fail if category already exists"
}

### Try to update without auth token (should fail)
PUT {{baseUrl}}/categories/development
Content-Type: application/json

{
    "name": "Development",
    "description": "This should fail without token"
}

### Try to update with empty name (should fail)
PUT {{baseUrl}}/categories/Development
Content-Type: application/json
Authorization: Bearer {{token}}

{
    "name": "",
    "description": "This should fail validation"
}

### Example responses:

# Get all categories response
# {
#     "success": true,
#     "data": [
#         {
#             "name": "Development",
#             "description": "Tools and platforms for software development",
#             "id": "65ae1234b5c3e1234567890a",
#             "created_at": "2024-01-22T10:30:00",
#             "created_by": "test",
#             "updated_at": "2024-01-22T10:30:00",
#             "updated_by": "test"
#         },
#         {
#             "name": "Infrastructure",
#             "description": "",
#             "id": "65ae1234b5c3e1234567890b",
#             "created_at": "2024-01-22T10:35:00",
#             "created_by": "test",
#             "updated_at": "2024-01-22T10:35:00",
#             "updated_by": "test"
#         }
#     ],
#     "total": 2,
#     "skip": 0,
#     "limit": 100
# }

# Get single category response
# {
#     "success": true,
#     "data": {
#         "name": "Development",
#         "description": "Tools and platforms for software development",
#         "id": "65ae1234b5c3e1234567890a",
#         "created_at": "2024-01-22T10:30:00",
#         "created_by": "test",
#         "updated_at": "2024-01-22T10:30:00",
#         "updated_by": "test"
#     }
# }

# Error responses examples:

# Not found error
# {
#     "success": false,
#     "error": "Category not found"
# }

# Validation error
# {
#     "success": false,
#     "error": "Category name cannot be empty"
# }

# Duplicate error
# {
#     "success": false,
#     "error": "Category with name 'Development' already exists"
# }

# Authentication error
# {
#     "success": false,
#     "error": "Not authenticated"
# } 